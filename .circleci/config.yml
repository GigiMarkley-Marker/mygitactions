# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

commands:
  failure:
    description: Notify failure
    steps:
      - run:
          command: |
            echo "One of the previous jobs failed."
          name: Failure Notification

jobs:
  test-backend:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - run:
          name: "Test backend"
          command: "echo Testing backend"
      - run:
          name: "Force failure (for testing)"
          command: "exit 1" # You can remove this once testing is done

  test-frontend:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - run:
          name: "Test frontend"
          command: "echo Testing frontend"
  system-checks:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - run:
          name: "Test system checks"
          command: "echo Testing system checks"

  setup-failure:
    docker:
      - image: cimg/base:current
    steps:
      - failure

  dev-build:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - run:
          name: "Test dev build"
          command: "echo Testing dev build"

  dev-deploy:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - run:
          name: "Test dev deploy"
          command: "echo Testing dev deploy"

  staging-build:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - run:
          name: "Test staging build"
          command: "echo Testing staging build"

  staging-deploy:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - run:
          name: "Test staging deploy"
          command: "echo Testing staging deploy"

  prod-build:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - run:
          name: "Test prod build"
          command: "echo Testing prod build"

  prod-deploy:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - run:
          name: "Test prod deploy"
          command: "echo Testing prod deploy"

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  dev-staging-prod-single-workflow:
    jobs:
      - test-backend
      - test-frontend
      - system-checks

      # Failure path if any of the tests or system checks fail
      - setup-failure:
          requires:
            - test-backend
            - test-frontend
            - system-checks
          filters:
            branches:
              only:
                - master # Adjust based on your use case

      # Success path if all tests and system checks pass
      - dev-build:
          requires:
            - test-backend
            - test-frontend
            - system-checks
      - dev-deploy:
          requires:
            - dev-build

      # Success path if dev-deploy passes
      - staging-build:
          requires:
            - dev-deploy
      - staging-deploy:
          requires:
            - staging-build

      # Success path if staging-deploy passes
      - prod-build:
          type: approval
          requires:
            - staging-deploy
      - prod-deploy:
          requires:
            - prod-build
