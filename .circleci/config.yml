# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

jobs:
  # SETUP JOBS
  test-backend:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - run:
          name: "Test backend"
          command: |
            echo "Testing backend"
            # Simulate a failure (you can remove this line)
            # false || (echo "Backend test failed! Performing alternative action..." && exit 1)
      - run:
          name: "Run on backend failure"
          when: on_fail
          command: echo "Running failure steps because backend test failed. This would be a good place to send a notification with details to slack."

  test-frontend:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - run:
          name: "Test frontend"
          command: "echo Testing frontend"
      - run:
          name: "Run on frontend failure"
          when: on_fail
          command: echo "Running failure steps because frontend test failed. This would be a good place to send a notification with details to slack."

  system-checks:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      # - run:
      #     name: "Test system checks"
      #     command: |
      #       echo Testing system checks
      #       ./scripts/hello.sh
    - run:
          name: "Make hello.sh executable"
          command: chmod +x scripts/hello.sh
      - run:
          name: "Run on system checks failure"
          when: on_fail
          command: echo "Running failure steps because system checks failed. This would be a good place to send a notification with details to slack."

  # DEV DEPLOYMENT JOBS
  dev-build:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - run:
          name: "Test dev build"
          command: "echo Testing dev build"
      - run:
          name: "Run on dev build failure"
          when: on_fail
          command: echo "Running failure steps because dev build failed. This would be a good place to send a notification with details to slack."

  dev-deploy:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - run:
          name: "Test dev deploy"
          command: "echo Testing dev deploy"
      - run:
          name: "Run on dev deploy failure"
          when: on_fail
          command: echo "Running failure steps because dev deploy failed. This would be a good place to send a notification with details to slack."

  # STAGING DEPLOYMENT JOBS
  staging-build:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - run:
          name: "Test staging build"
          command: "echo Testing staging build"
      - run:
          name: "Run on staging build failure"
          when: on_fail
          command: echo "Running failure steps because staging build failed. This would be a good place to send a notification with details to slack."
          # If there is a failure in the staging deployment process, would we want to roleback dev to match?

  staging-deploy:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - run:
          name: "Test staging deploy"
          command: "echo Testing staging deploy"
      - run:
          name: "Run on staging deploy failure"
          when: on_fail
          command: echo "Running failure steps because staging deploy failed. This would be a good place to send a notification with details to slack."
          # If there is a failure in the staging deployment process, would we want to roleback dev to match?

  # PROD DEPLOYMENT JOBS
  prod-build:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - run:
          name: "Test prod build"
          command: "echo Testing prod build"
      - run:
          name: "Run on prod build failure"
          when: on_fail
          command: echo "Running failure steps because prod build failed. This would be a good place to send a notification with details to slack."
          # If there is a failure in the prod deployment process, would we want to roleback staging and dev to match?
  prod-deploy:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - run:
          name: "Test prod deploy"
          command: "echo Testing prod deploy"
      - run:
          name: "Run on prod deploy failure"
          when: on_fail
          command: echo "Running failure steps because prod deploy failed. This would be a good place to send a notification with details to slack."
          # If there is a failure in the prod deployment process, would we want to roleback staging and dev to match?

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  dev-staging-prod-single-workflow:
    jobs:
      # Set-up jobs
      - test-backend
      - test-frontend
      - system-checks
      # Eventually we will add E2E tests here

      # Success path if all tests and system checks pass
      - dev-build:
          requires:
            - test-backend
            - test-frontend
            - system-checks
      - dev-deploy:
          requires:
            - dev-build
      # Eventually we will add smoke tests here

      # Success path if dev-deploy passes
      - staging-build:
          requires:
            - dev-deploy
      - staging-deploy:
          requires:
            - staging-build
      # Eventually we will add smoke tests here

      # Success path if staging-deploy passes and we have approval
      - prod-build:
          type: approval
          requires:
            - staging-deploy
      - prod-deploy:
          requires:
            - prod-build
      # Eventually we will add smoke tests here
